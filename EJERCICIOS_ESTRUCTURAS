//ESTRUCTURA
//#include <iostream>
//using namespace std;
//
//struct Persona {
//	string nombre;
//	int edad;
//};
//int main() {
//	Persona p[3];
//	for (int i = 0; i < 3; i++) {
//		cout <<i+1<< ".Ingrese su nombre: "; cin >> p[i].nombre;
//		cout << "Ingrese su edad: \n"; cin >> p[i].edad;
//	}
//
//}
//[ESTRUCTURA ANIDADA]
//#include<iostream>
//
//using namespace std;
//
//struct info_direccion {
//	string direccion, ciudad, provincia;
//};
//struct empleado {
//	string nombre;
//	struct info_direccion dir_empleado;
//	double salario;
//};
//
//int main() {
//	empleado e[2];
//	for (int i = 0; i < 2; i++) {
//		fflush(stdin);//VACIAR EL BUFFER  Y PERMITIR DIGITAR LOS VALORES
//
//		cout <<i+1<< ".\nDigite su nombre: "; cin>>e[i].nombre;
//		cout << "Digite su direccion: "; cin >> e[i].dir_empleado.direccion;
//		cout << "Ciudad: "; cin >> e[i].dir_empleado.ciudad;
//		cout << "Provincia: "; cin >> e[i].dir_empleado.provincia;
//		cout << "Ingrese su salario: "; cin >> e[i].salario;
//
//	}
//
//	for (int i = 0; i < 2; i++) {
//		cout << endl;
//		cout << i + 1 << ".Nombre: " << e[i].nombre<<endl;
//		cout << "Direccion: " << e[i].dir_empleado.direccion<<endl;
//		cout << "Ciudad: " << e[i].dir_empleado.ciudad<<endl;
//		cout << "Provincia: " << e[i].dir_empleado.provincia<<endl;
//		cout << "Salario: " << e[i].salario<<endl;
//	}
//	return 0;
//}
/*
Ejercicio 1: Hacer una estructura llamada corredor, en la cual se tendrán los siguientes campos: 
Nombre, edad, sexo, club, pedir datos al usuario para un corredor, y asignarle una categoría de competición:
Juvenil menor o = 18 años
Señor menor o = 40 años
Veterano mayor a 40 años
Posteriormente imprimir todos los datos del corredor, incluida su categoría de competición*/
//#include<iostream>
//#include<string.h>
//using namespace std;
//
//struct Corredor {
//	string Nombre;
//	int edad;
//	string sexo;
//	string club;
//	string cate;
//};
//
//int main() {
//
//	Corredor c[2];
//	for (int i = 0; i < 2; i++) {
//		cout << "--------------------"<<endl;
//		cout << i + 1 << ".\nIngrese su nombre: "; cin >> c[i].Nombre;
//		cout << "Ingrese su edad: "; cin >> c[i].edad;
//		fflush(stdin);//PARA LIMPIAR EL BUFFFER
//		cout << "Ingrese su sexo: "; cin >> c[i].sexo;
//		cout << "Ingrese su club: "; cin >> c[i].club;
//		if (c[i].edad <= 18) {
//			c[i].cate = "Juvenil";
//		}else if (c[i].edad <= 40) {
//			c[i].cate = "Senor";
//		}else if (c[i].edad > 40) {
//			c[i].cate = "Veterano";
//		}
//		cout << "--------------------" << endl;
//	}
//		cout << "DATOS INGRESADOS: " <<  endl;
//	for (int i = 0; i < 2; i++) {
//		cout << endl;
//		cout <<"Nombre: " << c[i].Nombre<<endl;
//		cout << "Edad: " << c[i].edad<<endl;
//		cout << "Sexo: " << c[i].sexo << endl;
//		cout << "Club: " << c[i].club<<endl;
//		cout << "Categoria de competicion: "<<c[i].cate<<endl;
//	}
//
//
//
//	return 0;
//}

/*Ejercicio 2: Hacer una estructura llamada alumno, en la cual se tendrán los siguientes Campos: 
Nombre, edad, promedio, pedir datos al usuario para 3 alumnos, 
comprobar cuál de los 3 tiene el mejor promedio y posteriormente imprimir los datos del alumno*/
//#include<iostream>
//#include<string.h>
//using namespace std;
//
//struct Alumno {
//	string Nombre;
//	int edad;
//	float promedio=0;
//};
//int main() {
//	Alumno a[3];
//	int gana=0;
//	float mayor = 0;
//	for (int i = 0; i < 3; i++) {
//		cout <<i+1<< ".\nIngrese su nombre: "; cin >> a[i].Nombre;
//		cout << "Ingrese su edad: "; cin >> a[i].edad;
//		cout << "Ingrese su promedio: "; cin >> a[i].promedio;
//		if (a[i].promedio > mayor) {
//			mayor = a[i].promedio;
//			gana = i;
//		}
//	}
//	cout << "\nEl que tiene mayor promedio es: " << endl;
//	cout << "Nombre: " << a[gana].Nombre << endl;
//	cout << "Edad: " << a[gana].edad << endl;
//	cout << "Promedio: " << mayor;
//
//	return 0;
//}

/*3.Ejercicio 3: Realizar un programa que lea un arreglo de estructuras los datos de N 
empleados de la empresa y que imprima los datos del empleado con mayor y menor salario.*/
//#include <iostream>
//#include<string.h>
//using namespace std;
//
//struct Empleado {
//	string Nombre;
//	float salario;
//
//};
//
//int main() {
//	Empleado e[100];
//	int N,posmay,posmen; float mayor = 0, menor = 999999999;
//	cout << "Ingrese la cantidad de empleados: "; cin >> N;
//	for (int i = 0; i < N; i++) {
//		cout <<i+1<< ".\nIngrese su nombre: "; cin >> e[i].Nombre;
//		cout << "Ingrese su salario: "; cin >> e[i].salario;
//		if (e[i].salario > mayor) {
//			mayor = e[i].salario;
//			posmay = i;
//		}
//		 if (e[i].salario < menor) {
//			menor = e[i].salario;
//			posmen = i;
//		}			
//	}
//	cout << endl;
//	cout << "------------------------------------------" << endl;
//	cout << "El empleado con mayor salario es: "<<endl;
//	cout << "Nombre: " << e[posmay].Nombre<<endl;
//	cout << "Salario: " << mayor<<endl;
//	cout << "------------------------------------------" << endl;
//	cout << "El empleado con menor salario es: " << endl;
//	cout << "Nombre: " << e[posmen].Nombre << endl;
//	cout << "Salario: " << menor << endl;
//
//	return 0;
//
//}

/*Ejercicio 4: Hacer un arreglo de estructura llamada atleta para N atletas que 
contenga los siguientes campos: nombre, país, numero_medallas. y devuelva los 
datos (Nombre, país) del atleta que ha ganado el mayor número de medallas.*/
//#include<iostream>
//#include<string.h>
//using namespace std;
//
//struct Atleta {
//	string nombre, pais;
//	int numeromedallas;
//};
//
//int main() {
//	int N, posmay; float mayor = 0;
//	Atleta a[100];
//	cout << "Ingrese la cantidad de atletas: "; cin >> N;
//
//	for (int i = 0; i < N; i++) {
//		cout << i + 1<< ".\nIngrese su nombre: "; cin >> a[i].nombre;
//		cout << "Ingrese su pais: "; cin >> a[i].pais;
//		cout << "Ingrese su numero de medallas: "; cin >> a[i].numeromedallas;
//		if (a[i].numeromedallas > mayor) {
//			mayor = a[i].numeromedallas;
//			posmay = i;
//		}
//	}
//	cout << endl;
//	cout << "-------------------------" << endl;
//	cout << "THE BEST: "<<endl;
//	cout << "Nombre: " << a[posmay].nombre<<endl;
//	cout << "Pais: " << a[posmay].pais<<endl;
//	cout << "Cantidad de medallas: " << mayor;
//	return 0;
//}
//

/*Ejercicio 5: Hacer 2 estructuras una llamada promedio que tendrá los siguientes campos: nota1, 
nota2, nota3; y otro llamada alumno que tendrá los siguientes miembros: nombre, sexo,
edad; hacer que la estructura promedio este anidada en la estructura alumno, luego pedir
todos los datos para un alumno, luego calcular su promedio, y por ultimo imprimir todos
sus datos incluidos el promedio.*/
//
//#include<iostream>
//#include<string.h>
//#include<conio.h>
//using namespace std;
//struct Promedio {
//	float notas1, notas2, notas3;
//};
//
//struct Alumno {
//	string nombre, sexo;
//	int edad;
//	struct Promedio prome;
//};
//
//int main() {
//	string texto; float media = 0;
//	Alumno a;
//	cout << "Ingrese su nombre: "; cin >> a.nombre;
//	cout << "Ingrese su sexo: "; cin >> a.sexo;
//	cout << "Ingrese su edad: "; cin >> a.edad;
//	system("cls");//limpia la pantalla
//	cout << "INGRESE SUS NOTAS: " << endl;
//	cout << "1."; cin >> a.prome.notas1;
//	cout << "2."; cin >> a.prome.notas2;
//	cout << "3."; cin >> a.prome.notas3;
//	
//	media = (a.prome.notas1 + a.prome.notas2 + a.prome.notas3);
//	if (media / 3 > 14) {
//		texto = "Sigue asi, no te rindas :)";
//	}
//	else {
//		texto = "!!!Estudia pes hijo!!";
//	}
//	system("cls");
//	cout << "DATOS DEL ESTUDIANTE: " << endl;
//	cout << "Nombre: " << a.nombre<<endl;
//	cout << "Sexo: " << a.sexo<<endl;
//	cout << "Edad: " << a.edad<<endl;
//	cout << "Promedio: " << media / 3<<endl;
//	cout << endl;
//	cout << "\t\t" << texto;
//
//	_getch();
//	
//	return 0;
//}
/*Ejercicio 6: Utilizar las 2 estructuras del problema 5, pero ahora pedir los datos para 
N alumnos, y calcular cuál de todos tiene el mejor promedio, e imprimir sus datos.
*/
//#include<iostream>
//#include<string.h>
//#include<conio.h>
//using namespace std;
//struct Promedio {
//	float notas1, notas2, notas3;
//};
//
//struct Alumno {
//	string nombre, sexo;
//	int edad;
//	struct Promedio prome;
//};
//
//int main() {
//	Alumno a[100]; float media=0,mayor = 0;
//	int N, posmay;
//	cout << "Ingresa la cantidad de alumnos: "; cin >> N;
//	
//	for (int i = 0; i < N; i++) {
//		cout << i + 1 << ".Digite su nombre: "; cin >> a[i].nombre;
//		cout << "Digite su sexo: "; cin >> a[i].sexo;
//		cout << "Digite su edad: "; cin >> a[i].edad;
//		cout << endl;
//		cout << "INGRESE SUS NOTAS: " << endl;
//		cout << "1."; cin >> a[i].prome.notas1;
//		cout << "2."; cin >> a[i].prome.notas2;
//		cout << "3."; cin >> a[i].prome.notas3;
//		system("cls");
//		
//		if ((a[i].prome.notas1 + a[i].prome.notas2 + a[i].prome.notas3) / 3 > mayor) {
//			mayor = (a[i].prome.notas1 + a[i].prome.notas2 + a[i].prome.notas3) / 3;
//			posmay = i;
//		}
//	}
//	system("cls");
//	cout << "DATOS DEL ESTUDIANTE CON MEJOR PROMEDIO: " << endl;
//	cout << "Nombre: " << a[posmay].nombre<<endl;
//	cout << "Edad: " << a[posmay].edad<<endl;
//	cout << "Sexo: " << a[posmay].sexo<<endl;
//	cout << "Promedio: " << mayor;
//	_getch();
//	return 0;
//}
/*Ejercicio 7: Defina una estructura que indique el tiempo empleado por un ciclista en 
una etapa. La estructura debe tener tres campos: horas, minutos y segundos. Escriba un 
programa que dado n etapas calcule el tiempo total empleado en correr todas las etapas.*/
//#include<iostream>
//#include<conio.h>
//using namespace std;
//
//struct Etapas {
//	int horas,minutos,seg;
//};
//
//int main() {
//	int N,horast=0,minut=0,segt=0;
//	Etapas et[100];
//	cout << "Ingrese el numero de etapas: "; cin >> N;
//
//	for (int i = 0; i < N; i++) {
//		cout <<i+1<< ".\nHoras: "; cin >> et[i].horas;
//		cout << "Minuto: "; cin >> et[i].minutos;
//		cout << "Segundos: "; cin >> et[i].seg;
//
//		horast += et[i].horas;
//		minut += et[i].minutos;
//	}
//		while (minut >= 60) {
//			minut -= 60;
//			horast++;
//		}
//		segt += et[i].seg;
//		while (segt >= 60) {
//			segt -= 60;
//			minut++;
//		}
//	cout << "------------------------------";
//	cout << endl;
//	cout << "Tiempo total: " << endl;
//	cout << "Horas: " << horast<<endl;
//	cout << "Minutos: " << minut << endl;
//	cout << "Segundos: " << segt;
//
//	_getch();
//	return 0;
//}
/*Ejercicio 8: Defina una estructura que sirva para representar a una persona. La estructura 
debe contener dos campos: el nombre de la persona y un valor de tipo lógico que indica si la 
persona tiene algún tipo de discapacidad. Realice un programa que dado un vector de personas 
rellene dos nuevos vectores: uno que contenga las personas que no tienen ninguna discapacidad 
y otro que contenga las personas con discapacidad.*/
#include<iostream>
#include<conio.h>
using namespace std;

struct Persona {
	char nombre[30];
	bool discapacidad ;
};
int main() {
	int N,j=0,k=0;
	Persona p[30],c_disca[30],sin_disca[30];
	
	cout << "Ingrese la cantidad de personas: "; cin >> N;
	for (int i = 0; i < N; i++) {
		cout << i+1<<".\nIngrese su nombre: "; cin >> p[i].nombre;
		cout << "Tiene alguna discapacidad (SI=1 NO=0): "; cin >> p[i].discapacidad;
		if (p[i].discapacidad == 1) {
			strcpy_s(c_disca[j].nombre, p[i].nombre);
			j++;
		}
		else {
			strcpy_s(sin_disca[k].nombre, p[i].nombre);
			k++;
		}

	}
	system("cls");
	cout << "PERSONAS CON DISCAPACIDAD: " << endl;
	for (int i = 0; i < j; i++) {
		cout << "-" << c_disca[i].nombre<<endl;
	}
	cout << endl;
	cout << "PERSONAS SIN DISCAPACIDAD: " << endl;
	for (int i = 0; i < k; i++) {
		cout << "-" << sin_disca[i].nombre << endl;
	}
	return 0;
}
